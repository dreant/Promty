name: Build, Test, and Package

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build-test-package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Get version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # Extract version from tag (removes 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # Fallback for manual runs - get latest tag
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/^v//' || echo "0.1.0")
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Package version: $VERSION"

    - name: Restore dependencies
      run: dotnet restore Promty.sln

    - name: Build
      run: dotnet build Promty.sln --configuration Release --no-restore

    - name: Run tests
      run: dotnet test Promty.sln --configuration Release --no-build --verbosity normal

    - name: Pack NuGet package
      run: |
        dotnet pack Promty/Promty.csproj \
          --configuration Release \
          --no-build \
          --output ./nupkg \
          /p:Version=${{ steps.get_version.outputs.version }}

    - name: Upload NuGet package artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./nupkg/*.nupkg

    - name: Publish to NuGet.org
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        dotnet nuget push ./nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
